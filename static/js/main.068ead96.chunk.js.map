{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["App","React","useState","catImage","setCatImage","useEffect","getCat","console","log","fetch","headers","then","cat","json","cats","catUrl","url","catch","error","className","class","src","alt","onClick","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"6KAiDeA,EA5CH,WAEV,MAAgCC,IAAMC,SAAS,IAA/C,mBAAOC,EAAP,KAAiBC,EAAjB,KAGAH,IAAMI,WAAU,WACdC,MACC,IAEH,IAAMA,EAAS,WACbC,QAAQC,IAAI,QAGZC,MAdY,6CAcG,CACbC,QAAS,CACP,YAjBQ,0CAqBTC,MAAK,SAACC,GAAD,OACJA,EAAIC,UAGLF,MAAK,SAACG,GACLP,QAAQC,IAAI,SAAUM,GACtB,IAAMC,EAASD,EAAK,GAAGE,IACvBZ,EAAYW,MAEbE,OAAM,SAACC,GACNX,QAAQC,IAAIU,OAIlB,OACE,sBAAKC,UAAU,YAAf,UACE,8EACA,qBAAKC,MAAM,cAAX,SACE,qBAAKC,IAAKlB,EAAUiB,MAAM,UAAUE,IAAI,eAG1C,wBAAQC,QAASjB,EAAjB,sCCjCSkB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBf,MAAK,YAAkD,IAA/CgB,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,K","file":"static/js/main.068ead96.chunk.js","sourcesContent":["import React from 'react'\nimport './App.css'\n\nconst catsKey = '2fbabe58-0577-430f-a11b-80592e5a988b';\nconst catsApi = 'https://api.thecatapi.com/v1/images/search';\nconst App = () => {\n\n  const [catImage, setCatImage] = React.useState([])\n\n  //useEffect para renderizar el dom, el [] es para que no se renderice infinitamente\n  React.useEffect(() => {\n    getCat()\n  }, [])\n\n  const getCat = () => {\n    console.log('miau');\n\n    //el headers es para pasarle la key de la api utilizada\n    fetch(catsApi, {\n      headers: {\n        'x-api-key': catsKey\n      }\n    })\n      //Primer then para transformar en un json la iteraci√≥n\n      .then((cat) =>\n        cat.json()\n      )\n      //segundo then para extraer la imagen\n      .then((cats) => {\n        console.log('Cats: ', cats);\n        const catUrl = cats[0].url;\n        setCatImage(catUrl)\n      })\n      .catch((error) => {\n        console.log(error);\n      })\n  }\n\n  return (\n    <div className='container'>\n      <h2>üêà A random cat image üêà</h2>\n      <div class=\"text-center\">\n        <img src={catImage} class=\"rounded\" alt=\"catImage\" />\n      </div>\n\n      <button onClick={getCat}>Get a new random Cat</button>\n    </div>\n  )\n}\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}